pipeline {
	agent any
	environment{
		GIT_REPOSITORY_URL = 'https://github.com/78856Rutuja/docker_jenkins_demo.git'
		DOCKER_IMAGE_NAME = 'rutuja2202/docker_jenkins_demo'
		IMAGE_TAG = '1.0'
	}
	stages{
		script{
			try{
				git branch: 'main', url: https://github.com/78856Rutuja/docker_jenkins_demo.git
		} catch (Exception e){
			echo 'failed to clone repository: ${e.message}'
			error 'Failed to clone repository'
		
			}
		}
	}
}
	stage('Build Docker Image') {
		steps {
			//Build Docker image using Dockerfile in repository
			script {
				try {
	   docker.build(DOCKER_IMAGE_NAME)
				}catch (Exception e){
					echo "Failed to build docker image ${e.message}"
					error "Failed to build docker image"
				}
			}
		}
	}
          stage("Push to DockerHub") {
		steps{
			script{
			  try{
			     withCredentials([usernamePassword](credentialsId: "my-docker-hub-credentials-id",
			usernameVariable:"DOCKER_USERNAME",passwordVariable: "DOCKER_PASSWORD")]){
				docker.withRegistry(){
				docker.imageDOCKER_IMAGE_NAME).push(IMAGE_TAG)
}
}
}catch(Exception e){
	echo "failed to push docker image to register: ${e.message}"
         error "Failed to build docker image"
}
}
}
}
}

